name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}

jobs:
  test-and-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install pip deps
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install --no-cache-dir -r requirements-dev.txt; fi

      - name: Run mypy (strict)
        env:
          PYTHONPATH: .
        run: |
          python -m mypy --strict .

      - name: Run tests
        env:
          PYTHONPATH: .
        run: |
          python -m pytest -q
          python -m scripts.validate_prompts --paths prompts.json --report-json validation-report.json

  prompt-validation:
    needs: test-and-validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install pip deps
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install --no-cache-dir -r requirements-dev.txt; fi

      - name: Run prompt validation (produce report)
        id: validate
        continue-on-error: true
        run: |
          PYTHONPATH=.
          python -m scripts.validate_prompts --paths prompts.json --report-json validation-report.json

      - name: Upload validation report (on failure)
        if: steps.validate.conclusion != 'success'
        uses: actions/upload-artifact@v4
        with:
          name: prompts-validation-report
          path: validation-report.json

      - name: Attempt autofix (safe fixes)
        id: autofix
        continue-on-error: true
        run: |
          PYTHONPATH=.
          python -m scripts.validate_prompts --paths prompts.json --autofix

      - name: Create PR for autofix changes
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: autofix prompts.json (CI)"
          branch: "autofix/prompts-${{ github.run_id }}"
          title: "Auto-fix prompts.json (validation)"
          body: "This PR contains automatic fixes to prompts.json from the validation CI job."

  slow-tests:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run slow tests only
        run: |
          PYTHONPATH=.
          python -m pytest -q -m slow

  twitter-integration:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Run Twitter integration tests (requires TWITTER_BEARER_TOKEN secret)
        env:
          PYTHONPATH: .
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        run: |
          python -m pytest -q -m twitter
name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}
name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}

jobs:
  test-and-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install pip deps
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install --no-cache-dir -r requirements-dev.txt; fi

      - name: Run mypy (strict)
        env:
          PYTHONPATH: .
        run: |
          python -m mypy --strict .

      - name: Run tests
        env:
          PYTHONPATH: .
        run: |
          python -m pytest -q
          python -m scripts.validate_prompts --paths prompts.json --report-json validation-report.json
  prompt-validation:
    needs: test-and-validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pip deps
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install --no-cache-dir -r requirements-dev.txt; fi

      - name: Run prompt validation (produce report)
        id: validate
        continue-on-error: true
        run: |
          PYTHONPATH=.
          python -m scripts.validate_prompts --paths prompts.json --report-json validation-report.json

      - name: Upload validation report (on failure)
        if: steps.validate.conclusion != 'success'
        uses: actions/upload-artifact@v4
        with:
          name: prompts-validation-report
          path: validation-report.json

      - name: Attempt autofix (safe fixes)
        id: autofix
        continue-on-error: true
        run: |
          PYTHONPATH=.
          python -m scripts.validate_prompts --paths prompts.json --autofix

      - name: Create PR for autofix changes
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: autofix prompts.json (CI)"
          branch: "autofix/prompts-${{ github.run_id }}"
          title: "Auto-fix prompts.json (validation)"
          body: "This PR contains automatic fixes to prompts.json from the validation CI job."

  slow-tests:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run slow tests only
        run: |
          PYTHONPATH=.
          python -m pytest -q -m slow

  twitter-integration:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Run Twitter integration tests (requires TWITTER_BEARER_TOKEN secret)
        env:
          PYTHONPATH: .
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        run: |
          python -m pytest -q -m twitter

name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}

jobs:
  test-and-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        name: CI

        on:
          push:
            branches: [ main, master ]
          pull_request:
            branches: [ main, master ]
          workflow_dispatch: {}

        jobs:
          test-and-validate:
            runs-on: ubuntu-latest
            steps:
              - name: Checkout
                uses: actions/checkout@v4

              - name: Set up Python
                uses: actions/setup-python@v4
                with:
                  python-version: '3.11'

<<<<<<< HEAD
              - name: Cache pip
                uses: actions/cache@v4
                with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                  restore-keys: |
                    ${{ runner.os }}-pip-
=======
      - name: Run mypy (strict)
        env:
          PYTHONPATH: .
        run: |
          python -m pip install --no-cache-dir mypy
          python -m mypy --strict -p agents -p worker -p mcp

      - name: Run tests
        env:
          PYTHONPATH: .
        run: |
          python -m pytest -q
>>>>>>> 2125b08 (ci: add mypy check and optional twitter-integration workflow)

              - name: Install pip deps
                run: |
                  python -m pip install --upgrade pip
                  pip install --no-cache-dir -r requirements.txt
                  if [ -f requirements-dev.txt ]; then pip install --no-cache-dir -r requirements-dev.txt; fi

              - name: Run mypy (strict)
                env:
                  PYTHONPATH: .
                run: |
                  python -m mypy --strict .

              - name: Run tests and prompt validation
                env:
                  PYTHONPATH: .
                run: |
                  python -m pytest -q
                  python -m scripts.validate_prompts --paths prompts.json --report-json validation-report.json

          prompt-validation:
            needs: test-and-validate
            runs-on: ubuntu-latest
            steps:
              - name: Checkout
                uses: actions/checkout@v4
                with:
                  persist-credentials: true

              - name: Set up Python
                uses: actions/setup-python@v4
                with:
                  python-version: '3.11'

              - name: Cache pip
                uses: actions/cache@v4
                with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                  restore-keys: |
                    ${{ runner.os }}-pip-

              - name: Install pip deps
                run: |
                  python -m pip install --upgrade pip
                  pip install --no-cache-dir -r requirements.txt
                  if [ -f requirements-dev.txt ]; then pip install --no-cache-dir -r requirements-dev.txt; fi

              - name: Run prompt validation (produce report)
                id: validate
                continue-on-error: true
                run: |
                  PYTHONPATH=.
                  python -m scripts.validate_prompts --paths prompts.json --report-json validation-report.json

              - name: Upload validation report (on failure)
                if: steps.validate.conclusion != 'success'
                uses: actions/upload-artifact@v4
                with:
                  name: prompts-validation-report
                  path: validation-report.json

              - name: Attempt autofix (safe fixes)
                id: autofix
                continue-on-error: true
                run: |
                  PYTHONPATH=.
                  python -m scripts.validate_prompts --paths prompts.json --autofix

              - name: Create PR for autofix changes
                uses: peter-evans/create-pull-request@v5
                with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  commit-message: "chore: autofix prompts.json (CI)"
                  branch: "autofix/prompts-${{ github.run_id }}"
                  title: "Auto-fix prompts.json (validation)"
                  body: "This PR contains automatic fixes to prompts.json from the validation CI job."

<<<<<<< HEAD
          slow-tests:
            if: ${{ github.event_name == 'workflow_dispatch' }}
            runs-on: ubuntu-latest
            steps:
              - name: Checkout
                uses: actions/checkout@v4

              - name: Set up Python
                uses: actions/setup-python@v4
                with:
                  python-version: '3.11'

              - name: Install dependencies
                run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

              - name: Run slow tests only
                run: |
                  PYTHONPATH=.
                  python -m pytest -q -m slow

          twitter-integration:
            if: ${{ github.event_name == 'workflow_dispatch' }}
            runs-on: ubuntu-latest
            steps:
              - name: Checkout
                uses: actions/checkout@v4

              - name: Set up Python
                uses: actions/setup-python@v4
                with:
                  python-version: '3.11'

              - name: Install dependencies
                run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

              - name: Run twitter-marked tests (requires TWITTER_BEARER_TOKEN secret)
                env:
                  TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
                  PYTHONPATH: .
                run: |
                  python -m pytest -q -m twitter
=======
      - name: Run slow tests only
        run: |
          python -m pytest -q -m slow

  twitter-integration:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Run Twitter integration tests (requires TWITTER_BEARER_TOKEN secret)
        env:
          PYTHONPATH: .
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        run: |
          python -m pytest -q -m twitter
>>>>>>> 2125b08 (ci: add mypy check and optional twitter-integration workflow)
